'''闭包：
1.定义：函数嵌套；内部函数对外部函数作用域里变量的引用；外部函数的返回值为内部函数
函数内的属性，都是有生命周期的，也就是在函数执行期间
闭包内的闭包函数（func1或者说内部函数）私有化了变量（a本身是外函数的变量，但是被内函数占有了），完成了数据封装，类似于面向对象
闭包真正做的意义是让在外函数作用域的东西活下来，以函数的形式返回；也就是说整个函数的内存没了，但是因为返回了一个内部函数，所以
其存在到内存上，这就涉及一个大规模使用闭包时对内存损耗的问题。
装饰器 语法糖@
'''
def func():
    a=1#外部函数作用域里的变量
    print('this is func.')
    def func1(num):#假如你想在内函数内更改a的话要先nonlocal a
        print('this is func1.')
        #nonlocal a
        print(num+a)
#假如我们想要func1
    return func1#函数
#func()#运行外部函数内部函数就被创建了
#func1()
var=func()#func1创建过程在func执行过程中
#var==func1
var(3)#此时a没有死掉，存在var中

'''
this is func.
this is func1.'''